import React from 'react';
import { Table, Alert } from 'antd';
import { connect } from 'dva';
import PropTypes from 'prop-types';
import consts from '../../config/const.js';
import { changePagination, decimalTo4, decimalTo2, taxRateFormater } from '../../utils/util.js';
import packageConst from './packageConst.js';
import NestedTable from './NestedTable.js';

function DataTable({
  dispatch,
  list,
  loading,
  selectedRowKeysArr,
  total,
  queryParams,
}) {
  const tdWidth = { width: 80 };
  const columns = [
    {
      title: '单据日期',
      key: 'billTime',
      dataIndex: 'billTime',
      width: 160,
    }, {
      title: '单据编号',
      key: 'billNumber',
      dataIndex: 'billNumber',
      width: 150,
    },
    {
      title: '法人主体',
      key: 'legalPerson',
      dataIndex: 'legalPerson',
      width: 200,
    }, {
      title: '客户',
      key: 'customer',
      dataIndex: 'customer',
      width: 250,
    },
    {
      title: '部门',
      key: 'departmentName',
      dataIndex: 'departmentName',
      width: 100,
    }, {
      title: '账号',
      key: 'account',
      dataIndex: 'account',
      ...tdWidth,
    }, {
      title: '站点',
      key: 'site',
      dataIndex: 'site',
      ...tdWidth,
    },
    {
      title: 'SKU',
      key: 'sku',
      dataIndex: 'sku',
      ...tdWidth,
    },
    {
      title: 'UPC',
      key: 'upc',
      dataIndex: 'upc',
      width: 110,
    },
    {
      title: '币别',
      key: 'currencyCode',
      dataIndex: 'currencyCode',
      width: 130,
    }, {
      title: '汇率',
      key: 'exchangeRate',
      dataIndex: 'exchangeRate',
      width: 150,
      render: decimalTo2,
    }, {
      title: '数量',
      key: 'totalQuantity',
      dataIndex: 'totalQuantity',
      width: 110,
    }, {
      title: '税率',
      key: 'taxRatio',
      dataIndex: 'taxRatio',
      width: 130,
      render: decimalTo2,
    }, {
      title: '金额',
      key: 'totalMoney',
      dataIndex: 'totalMoney',
      width: 150,
      render: decimalTo2,
    }, {
      title: '税额',
      key: 'taxMomey',
      dataIndex: 'taxMomey',
      width: 200,
      render: decimalTo2,
    }, {
      title: '价税合计（本位币）',
      key: 'valoremCny',
      dataIndex: 'valoremCny',
      width: 100,
      render: decimalTo2,
    }, {
      title: '单据状态',
      key: 'billStatus',
      dataIndex: 'billStatus',
      width: 100,
      render: consts.voucherStatusRender,
    }, {
      title: '单据号',
      key: 'billNo',
      dataIndex: 'billNo',
      width: 100,
      render: consts.voucherStatusRender,
    }, {
      title: '推送金蝶时间',
      key: 'pushTime',
      dataIndex: 'pushTime',
      width: 200,
    }, {
      title: '金蝶生成凭证错误描述',
      key: 'errorMessage',
      dataIndex: 'errorMessage',
      width: 300,
    }];


  const onSelectChange = (selectedRowKeys, selectedRows) => {
    dispatch({ type: `${packageConst.modelNameSapce}/selectedRowKeys`, payload: selectedRowKeys });
    dispatch({ type: `${packageConst.modelNameSapce}/selectedRows`, payload: selectedRows });
  };
  const rowSelection = {
    selectedRowKeys: selectedRowKeysArr,
    onChange: onSelectChange,
    getCheckboxProps: record => ({
      disabled: record.createDate === '本页合计' || record.createDate === '全部合计',
      name: record.name,
    }),
  };
  const changePaginationHandle = (page, pageSize) => {
    // dispatch({ type: 'common/setCommonPaginnation', payload: {offset:page,limit:} })
    changePagination(page, pageSize, dispatch, `${packageConst.modelNameSapce}`, queryParams);
  };
  const pageSizeChangeHandle = (current, size) => {
    // dispatch({ type: `${packageConst.modelNameSapce}/tableData`, payload: { offset: 0, limit: size } });
    changePagination(current, size, dispatch, `${packageConst.modelNameSapce}`, queryParams);
  };
  return (
    <div>
      <Alert message={`已选择${selectedRowKeysArr.length}项`} type="info" showIcon style={{ marginTop: '10px' }} />
      <Table
        columns={columns}
        dataSource={list}
        rowKey="id"
        rowSelection={rowSelection}
        loading={loading}
        className="nestedTable"
        expandedRowRender={NestedTable}
        style={{ marginTop: '20px' }}
        scroll={Object.assign(consts.globalTableScroll, { x: 3100 })}
        pagination={{
          total,
          defaultPageSize: consts.defaultPageSize,
          pageSizeOptions: consts.pageSizeOptions,
          showSizeChanger: true,
          hideOnSinglePage: false,
          onChange: changePaginationHandle,
          onShowSizeChange: pageSizeChangeHandle,
          showTotal: () => (consts.GlobalShowTotal(total)),
        }}
      />
    </div>
  );
}
DataTable.PropTypes = {
  queryParams: PropTypes.object,
};

// export default DataTable;
export default connect()(DataTable);

