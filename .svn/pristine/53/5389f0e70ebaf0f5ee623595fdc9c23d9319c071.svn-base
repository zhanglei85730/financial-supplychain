import request from '../utils/request';
import consts from '../config/const.js';
import * as util from '../utils/util.js';
// 加载table数据
export function fetchTableData(payload) {
  return util.getSecurityHeaderFormLocal().then((opts) => {
    const params = util.params(util.deleteJsonEmptyProps(payload));
    return request(`${consts.domainInventory}/inout_bound_detail/search?${params}`, opts);
  });
}
// 审核接口
export function approveData(payload) {
  return util.getSecurityHeaderFormLocal().then((opts) => {
    const params = util.params(util.deleteJsonEmptyProps(payload));
    return request(`${consts.domainInventory}/inout_bound_detail/approve_data?${params}`, opts);
  });
}
//以下请求接口，其他出入库、出入库明细模块公用
// 出入库类型
export function warehouseTypeSelect() {
  return util.getSecurityHeaderFormLocal().then((opts) => {
    return request(`${consts.domainInventory}/common/warehouse_type_select`, opts);
  });
}
// 出库类型
export function outboundWarehouseTypeSelect() {
  return util.getSecurityHeaderFormLocal().then((opts) => {
    return request(`${consts.domainInventory}/common/outbound_warehouse_type_select`, opts);
  });
}
// 入库类型
export function inboundWarehouseTypeSelect() {
  return util.getSecurityHeaderFormLocal().then((opts) => {
    return request(`${consts.domainInventory}/common/inbound_warehouse_type_select`, opts);
  });
}
// 审核状态
export function approveStatusSelect() {
  return util.getSecurityHeaderFormLocal().then((opts) => {
    return request(`${consts.domainInventory}/common/approve_status_select`, opts);
  });
}
// 推送状态
export function pushStatusSelect() {
  return util.getSecurityHeaderFormLocal().then((opts) => {
    return request(`${consts.domainInventory}/common/push_status_select`, opts);
  });
}
// 法人主体
export function companySelect() {
  return util.getSecurityHeaderFormLocal().then((opts) => {
    return request(`${consts.domainInventory}/common/company_select`, opts);
  });
}
// 重算接口
export function addCalAgainProcess(payload) {
  return util.getSecurityHeaderFormLocal().then((opts) => {
    const params = util.params(payload);
    return request(`${consts.domainInventory}/inbound_detail/add_cal_again_process?${params}`, opts);
  });
}
