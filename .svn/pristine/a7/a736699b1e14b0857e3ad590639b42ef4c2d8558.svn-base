import moment from 'moment';

export default {
  // 正式部署地址
  // domain: 'http://financial-supplychain.aukeyit.com',
  domain: 'http://192.168.25.160:9102', // 刘婷
  // domain: 'http://192.168.25.236:9102', // 谢
  // 本地开发websocket
  wsUrl: 'ws://192.168.25.160:9102',
  routePrefix: '/',
  // 正式websocket
  // wsUrl: 'ws://10.1.1.204:8091',
  // 测试websocket
  //10.1.1.204:8091
  // domain: 'http://localhost:8000',
  // 本地测试
  // http://www.aukeyit.com/login
  // domain: 'http://192.168.25.56:8010',
  tableScrollY: 860,
  //服务端返回的table分页条数
  limit: 10,
  // 返回pageSize额外条数 用于求和行
  extraPageSize: 2,
  defaultPageSize: 20,
  pageSizeOptions: ['20', '30', '40'],
  // 登录地址
  loginUrl: 'http://www.aukeyit.com/login',
  // search form config
  // 单据日期
  createDate: {
    title: '单据日期',
    key: 'createDate',
    dataIndex: 'createDate',
  },
  // 设置翻页显示总计条数
  GlobalShowTotal: (total) => {
    return `共 ${total} 条`;
  },
  // 计量单位
  unitPcs: (value) => {
    return 'pcs';
  },
  globalTableScroll: { y: 700 },
  // globalTableScroll: {},
  // 凭证状态/单据状态
  voucherStatusRender: (value) => {
    let type = '';
    switch (value) {
      case '0':
        type = '待推送EAS';
        break;
      case '1':
        type = '推送成功';
        break;
      case '2':
        type = '推送失败';
        break;
      case '3':
        type = '待推送EAS-删除原凭证)';
        break;
      default:
        type = '-';
    }
    return type;
  },
  // 付款方式 table render
  globalPayType: (value) => {
    let type = '';
    switch (value) {
      case '1':
        type = '支付宝';
        break;
      case '2':
        type = '银行转账';
        break;
      case '3':
        type = '现金支付';
        break;
      case '4':
        type = '第三方编号';
        break;
      default:
        type = value;
    }
    return type;
  },
  // 采购退款付款方式 table render
  purchaseRefundsPayType: (value) => {
    let type = '';
    switch (value) {
      case '0':
        type = '现金';
        break;
      case '1':
        type = '银行转账';
        break;
      case '2':
        type = '支付宝';
        break;
      case '3':
        type = '留抵';
        break;
      default:
        type = value;
    }
    return type;
  },
  // 含税 table render
  isTax: (value) => {
    let type = '';
    switch (value) {
      case '0':
        type = '否';
        break;
      case '1':
        type = '是';
        break;
      default:
        type = value;
    }
    return type;
  },
  // 日期格式化为 YYYY-MM-DD
  dateFormat: (value) => {
    return moment(value).format('YYYY-MM-DD');
  },
  colorRed: '#ff4d4f',
  // select 通用props
  selectProps: {
    maxTagCount: 1,
    mode: 'multiple',
  },
};
